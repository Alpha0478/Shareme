{"version":3,"file":"static/js/69.7d7a9e4a.chunk.js","mappings":"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","sources":["components/Cropper.jsx","components/Uploads/AddPhoto.jsx","firebase.js","fragments/Navigation.jsx"],"sourcesContent":["import React, { useRef, useState} from 'react'\r\nimport { useGesture } from 'react-use-gesture'\r\nimport { animate,motion,useMotionValue } from 'framer-motion';\r\n\r\n\r\n\r\nconst Cropper = ({src,crop,onCropChange,showGrid}) => {\r\n    let x = useMotionValue(crop.x)\r\n    let y = useMotionValue(crop.y)\r\n    let scale = useMotionValue(crop.scale)\r\n\r\n    let [isDragging, setIsDragging] = useState(false);\r\n    let [isPinching, setIsPinching] = useState(false);\r\n    let imageRef = useRef()\r\n\r\n    let imageWrapperRef = useRef()\r\n\r\n    const MaybeAdjustImage = () =>{\r\n      let newCrop = {x: x.get(), y: y.get(), scale: scale.get()}\r\n      let imageBounds = imageRef.current.getBoundingClientRect()\r\n      let wrapperBounds = imageWrapperRef.current.getBoundingClientRect()\r\n      let originalWidth = imageRef.current.clientWidth;\r\n      let widthOverhang = (imageBounds.width - originalWidth) / 2;\r\n\r\n      let originalHeight = imageRef.current.clientHeight;\r\n      let heightOverhang = (imageBounds.height - originalHeight) / 2;\r\n\r\n      if (imageBounds.left > wrapperBounds.left) {\r\n        newCrop.x = widthOverhang\r\n\r\n      } else if (imageBounds.right < wrapperBounds.right) {\r\n        newCrop.x = -(imageBounds.width - wrapperBounds.width) + widthOverhang\r\n      }\r\n\r\n      if (imageBounds.top > wrapperBounds.top) {\r\n        newCrop.y = heightOverhang\r\n\r\n      } else if (imageBounds.bottom < wrapperBounds.bottom) {\r\n        newCrop.y = -(imageBounds.height - wrapperBounds.height) + heightOverhang \r\n      }\r\n      animate(x, newCrop.x, {\r\n        type: 'tween',\r\n        duration: 0.4,\r\n        ease: [0.25,1,0.5,1]\r\n      })\r\n      animate(y, newCrop.y, {\r\n        type: 'tween',\r\n        duration: 0.4,\r\n        ease: [0.25,1,0.5,1]\r\n      })\r\n      \r\n      onCropChange(newCrop)\r\n    }\r\n\r\n    useGesture(\r\n      {\r\n        onDrag: ({ dragging, movement: [dx, dy] }) => {\r\n          x.stop()\r\n          y.stop()\r\n\r\n          setIsDragging(dragging);\r\n          x.set(dx)\r\n          y.set(dy)\r\n        },\r\n        onPinch: ({\r\n          pinching,\r\n          memo,\r\n          offset: [d],\r\n          origin: [pinchOriginX, pinchOriginY],\r\n        }) => {\r\n          x.stop()\r\n          y.stop()\r\n\r\n          setIsPinching(pinching);\r\n\r\n          memo ??= {\r\n            bounds: imageRef.current.getBoundingClientRect(),\r\n            crop: {x: x.get(), y: y.get(), scale: scale.get()}\r\n          };\r\n\r\n          let transformOriginX = memo.bounds.x + memo.bounds.width / 2;\r\n          let transformOriginY = memo.bounds.y + memo.bounds.height / 2;\r\n\r\n          let displacementX = (transformOriginX - pinchOriginX) / memo.crop.scale;\r\n          let displacementY = (transformOriginY - pinchOriginY) / memo.crop.scale;\r\n\r\n          let initialOffsetDistance = (memo.crop.scale - 1) * 50;\r\n          let movementDistance = d - initialOffsetDistance;\r\n\r\n        \r\n            scale.set(1 + d / 50)\r\n            x.set(memo.crop.x + (displacementX * movementDistance) / 50)\r\n            y.set(memo.crop.y + (displacementY * movementDistance) / 50)\r\n\r\n            return memo\r\n\r\n        },\r\n        onDragEnd: MaybeAdjustImage,\r\n        onPinchEnd: MaybeAdjustImage\r\n      },\r\n      {\r\n        drag: {\r\n          initial: () => [x.get(), y.get()]\r\n        },\r\n        pinch: {\r\n          distanceBounds: { min: 0 }\r\n        },\r\n        domTarget: imageRef,\r\n        eventOptions: { passive: false },\r\n      })\r\n \r\n    \r\n\r\n    return (\r\n      <>\r\n        <div className='w-full relative overflow-y-hidden'>\r\n          <div  ref={imageWrapperRef} className=' w-full absolute overflow-hidden hide-scrollbar aspect-square'>\r\n            <motion.img\r\n              src={src}\r\n              ref={imageRef}\r\n              style={{\r\n                x: x,\r\n                y: y,\r\n                scale: scale,\r\n                touchAction: 'none',\r\n              }}\r\n              className=\"relative w-full h-auto max-w-none max-h-none hide-scrollbar\"\r\n            />\r\n            {showGrid &&(\r\n              <div className={`border border-gray-50 w-full pointer-events-none absolute inset-0 trabsition duration-300 ${isDragging || isPinching ? \"opacity-100\" : \"opacity-0\"\r\n                }`}>\r\n                <div className=\"absolute inset-0 flex flex-col\">\r\n                  <div className=\"self-stretch flex-1 border-b border-gray-50\"></div>\r\n                  <div className=\"self-stretch flex-1 border-b border-gray-50\"></div>\r\n                  <div className=\"self-stretch flex-1\"></div>\r\n                </div>\r\n                <div className=\"absolute inset-0 flex\">\r\n                  <div className=\"self-stretch flex-1 border-r border-gray-50\"></div>\r\n                  <div className=\"self-stretch flex-1 border-r border-gray-50\"></div>\r\n                  <div className=\"self-stretch flex-1\"></div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n      </>\r\n\r\n    )\r\n  }\r\n\r\n  export default Cropper","import Cropper from '../Cropper.jsx'\r\nimport { motion } from 'framer-motion';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Navigation from '../../fragments/Navigation.jsx';\r\nimport { getCroppedImage } from '../../fragments/helper.js';\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage'\r\nimport app from \"../../firebase.js\"\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPost } from '../../redux/postsSlice.js';\r\nimport { MdAddPhotoAlternate } from 'react-icons/md'\r\n\r\n\r\n\r\nconst AddPhoto = ({ setToggleAddpost, toggleAddpost, postType, showGrid, setToggleAddPhoto }) => {\r\n  let [crop, setCrop] = useState({ x: 0, y: 0, scale: 1 })\r\n  const [imageSrc, setImageSrc] = useState(null)\r\n  const [file, setFile] = useState();\r\n  const [img, setImg] = useState(undefined)\r\n  const [inputs, setInputs] = useState({})\r\n  const [imgPerc, setImgPerc] = useState(0)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleBackBtnCLick = (e) => {\r\n    e.preventDefault();\r\n    setToggleAddpost(false)\r\n    if (!toggleAddpost) {\r\n      setToggleAddPhoto(false)\r\n    }\r\n  }\r\n\r\n  const handlePhotoChange = async (e) => {\r\n    const image_file = e.target.files[0]\r\n    setFile(image_file)\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(image_file)\r\n\r\n    reader.onload = (e) => {\r\n      setImageSrc(e.target.result)\r\n\r\n    }\r\n  }\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setInputs(prev => {\r\n      return { ...prev, [e.target.name]: e.target.value }\r\n    })\r\n  }\r\n\r\n  const uploadFile = (file, urlType) => {\r\n    const storage = getStorage(app);\r\n    const fileName = new Date().getTime() + file.name\r\n    const storageRef = ref(storage, fileName)\r\n    const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        urlType === \"Url\" && setImgPerc(Math.round(progress));\r\n        switch (snapshot.state) {\r\n          case \"paused\":\r\n            break;\r\n          case \"running\":\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n      (error) => { },\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((getDownloadURL) => {\r\n          setInputs((prev) => {\r\n            return { ...prev, [urlType]: getDownloadURL }\r\n          });\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => { img && uploadFile(img, \"Url\"); }, [img]);\r\n\r\n  const handlePost = async (e) => {\r\n    if (imgPerc < 100) {\r\n      console.log(\"\")\r\n    } else {\r\n      console.log(\"\")\r\n    }\r\n    e.preventDefault();\r\n    const croppedPic = await getCroppedImage({ dataURL: imageSrc, crop, fileName: file.name, aspectRatio: 1 })\r\n    setImg(croppedPic)\r\n    if (imgPerc === 100) {\r\n      handleUpload()\r\n    }\r\n  }\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    const res = await axios.post(\"/images\", { ...inputs, postType })\r\n    dispatch(addPost(res.data))\r\n\r\n    res.status === 200 &&\r\n      setToggleAddpost(false)\r\n    if (!toggleAddpost && imgPerc === 100) {\r\n      // setToggleUpload(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const header = \"Add Photo\"\r\n\r\n  const nextbtn =\r\n    <>\r\n\r\n\r\n\r\n    </>\r\n\r\n  return (\r\n    <>\r\n      <div as={motion.div} className=\"bg-white dark:bg-black flex flex-col top-0 overflow-scroll z-10 absolute w-full h-full\"\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{\r\n          opacity: 0,\r\n        }}>\r\n\r\n        <div className=\"flex w-full h-full pt-[50px] hide-scrollbar \">\r\n          <Navigation handleBackBtnCLick={handleBackBtnCLick} nextbtn={nextbtn} header={header} />\r\n\r\n          <div className='flex flex-row relative w-full m-px align-center justify-content: center mb-[50px]'>\r\n            {!imageSrc ? (\r\n              <>\r\n                <label htmlFor='img'>\r\n                  <div className='flex flex-row p-[10px] items-center gap-[2px] justify-start w-full'>\r\n                    <input\r\n                    className=\"hidden p-[10px]\"\r\n                    id='img' type=\"file\" accept=\"image/*\" onChange={(e) => handlePhotoChange(e)} />\r\n                    <h2 className='flex flex-row color-gray-500 gap-4 font-normal text-xl m-6'>\r\n                      <MdAddPhotoAlternate fontSize={50} />\r\n                      Select pictures from your gallery\r\n                    </h2>\r\n                  </div>\r\n                </label>\r\n              </>\r\n\r\n            ) : (\r\n              <Cropper\r\n                file={file}\r\n                src={imageSrc}\r\n                crop={crop}\r\n                onCropChange={setCrop}\r\n                showGrid={showGrid}\r\n              />\r\n\r\n            )}\r\n\r\n\r\n          </div>\r\n\r\n          <div className='flex flex-col w-full absolute gap-[20px] items-center bottom-0 p-[20px] pt-[50px]'>\r\n            {imageSrc && (\r\n              <textarea\r\n                id='textarea'\r\n                className=\" p-[10px] rounded-[6px]  border-2 border-[#999] outline-none resize-none w-full bg-[#f5f5f5] dark:bg-[#202020] hide-scrollbar\"\r\n                name=\"desc\" placeholder=\"Add caption...\"\r\n                row={8}\r\n                onChange={handleChange}\r\n                maxLength={200}\r\n              />\r\n            )}\r\n            {imageSrc && (\r\n              <>\r\n                {imgPerc === 0 ? (\r\n                  <button\r\n                    className=\"flex flex-row items-center justify-center p-[8px] w-[60%] rounded-full my-2 mt-[20px] font-xl\"\r\n\r\n                    style={{ backgroundColor: \"#00acee\", color: \"white\" }}\r\n                    type=\"button\"\r\n                    onClick={handlePost}\r\n                  >\r\n                    Upload\r\n                  </button>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {imgPerc === 100 && (\r\n                  <button\r\n                    className=\"flex flex-row items-center justify-center p-[8px] w-[60%] rounded-full my-2 mt-[20px] font-xl\"\r\n                    style={{ backgroundColor: \"#00acee\", color: \"white\" }}\r\n                    type=\"button\"\r\n                    onClick={handleUpload}\r\n                  >\r\n                    Post\r\n                  </button>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default AddPhoto","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth, GoogleAuthProvider} from \"firebase/auth\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDqf0PFlXP0sZe2Ff-ncFhxbC2HwVtXyEM\",\r\n  authDomain: \"video-ceedb.firebaseapp.com\",\r\n  projectId: \"video-ceedb\",\r\n  storageBucket: \"video-ceedb.appspot.com\",\r\n  messagingSenderId: \"265928480230\",\r\n  appId: \"1:265928480230:web:f9ec6678d345056b0a3227\",\r\n  measurementId: \"G-LP51K47LK9\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth();\r\nexport const provider = new GoogleAuthProvider();\r\nexport default app;\r\n\r\n","import React from \"react\";\r\nimport { TfiArrowLeft } from \"react-icons/tfi\";\r\n\r\nconst Navigation = ({\r\n  header,\r\n  handleBackBtnCLick,\r\n  savebtn,\r\n  nextbtn,\r\n  savebtn2,\r\n  cancelbtn,\r\n  searchbar,\r\n}) => {\r\n  const styles =\r\n    \" flex flex-row top-0 z-10 absolute w-full lg:border-b-[3px] border-[#f5f5f5] dark:border-[#202020] h-[50px] lg:h-[60px]\";\r\n\r\n  return (\r\n    <>\r\n      <div className={styles}>\r\n        <div className=\"w-full h-full relative items-center justify-around flex flex-row \">\r\n          {handleBackBtnCLick || cancelbtn ? (\r\n            <button\r\n              className=\"flex flex-row cursor-pointer left-0 w-[42px] h-[42px] absolute ml-[4px] items-center hover:border-2 hover:text-[#00acee] border-[#00acee] justify-center hover:rounded-full\"\r\n              onClick={handleBackBtnCLick}>\r\n              {!cancelbtn ? <TfiArrowLeft fontSize={25} /> : cancelbtn}\r\n            </button>\r\n          ) : \"\"}\r\n\r\n          <h2 className=\"font-medium text-xl\">{header}</h2>\r\n          {savebtn}\r\n          {savebtn2}\r\n          {searchbar}\r\n          {nextbtn}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n"],"names":["_ref","src","crop","onCropChange","showGrid","x","useMotionValue","y","scale","_useState","useState","_useState2","_slicedToArray","isDragging","setIsDragging","_useState3","_useState4","isPinching","setIsPinching","imageRef","useRef","imageWrapperRef","MaybeAdjustImage","newCrop","get","imageBounds","current","getBoundingClientRect","wrapperBounds","originalWidth","clientWidth","widthOverhang","width","originalHeight","clientHeight","heightOverhang","height","left","right","top","bottom","animate","type","duration","ease","useGesture","onDrag","_ref2","dragging","_ref2$movement","movement","dx","dy","stop","set","onPinch","_ref3","_memo","pinching","memo","d","offset","_ref3$origin","origin","pinchOriginX","pinchOriginY","bounds","transformOriginX","transformOriginY","displacementX","displacementY","movementDistance","onDragEnd","onPinchEnd","drag","initial","pinch","distanceBounds","min","domTarget","eventOptions","passive","_jsx","_Fragment","children","className","_jsxs","ref","motion","img","style","touchAction","concat","setToggleAddpost","toggleAddpost","postType","setToggleAddPhoto","setCrop","imageSrc","setImageSrc","_useState5","_useState6","file","setFile","_useState7","undefined","_useState8","setImg","_useState9","_useState10","inputs","setInputs","_useState11","_useState12","imgPerc","setImgPerc","dispatch","useDispatch","handlePhotoChange","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","image_file","reader","wrap","_context","prev","next","target","files","FileReader","readAsDataURL","onload","result","_x","apply","arguments","useEffect","urlType","storage","getStorage","app","fileName","Date","getTime","name","storageRef","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","Math","round","state","error","getDownloadURL","then","_objectSpread","_defineProperty","uploadFile","handlePost","_callee2","croppedPic","_context2","console","log","preventDefault","getCroppedImage","dataURL","aspectRatio","sent","handleUpload","_x2","_ref4","_callee3","res","_context3","axios","post","addPost","data","status","_x3","nextbtn","as","div","opacity","exit","Navigation","handleBackBtnCLick","header","Cropper","htmlFor","id","accept","onChange","MdAddPhotoAlternate","fontSize","placeholder","row","value","maxLength","backgroundColor","color","onClick","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","provider","GoogleAuthProvider","savebtn","savebtn2","cancelbtn","searchbar","TfiArrowLeft"],"sourceRoot":""}