{"version":3,"file":"static/js/12.ce72ab44.chunk.js","mappings":"uQAmJA,UAvIiB,SAAHA,GAA0E,IAApEC,EAAQD,EAARC,SAAUC,EAAgBF,EAAhBE,iBAAkBC,EAAaH,EAAbG,cAAeC,EAAiBJ,EAAjBI,kBAC7DC,GAA0BC,EAAAA,EAAAA,eAASC,GAAUC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAtCK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCN,EAAAA,EAAAA,UAAS,MAAKO,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAkCV,EAAAA,EAAAA,UAAS,GAAEW,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA4Bd,EAAAA,EAAAA,UAAS,CAAC,GAAEe,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,GAAWC,EAAAA,EAAAA,OA0CjBC,EAAAA,EAAAA,YAAU,WAAQhB,GAhCC,SAACiB,EAAMC,GACxB,IAAMC,GAAUC,EAAAA,EAAAA,IAAWC,EAAAA,IACrBC,GAAW,IAAIC,MAAOC,UAAYP,EAAKQ,KACvCC,GAAaC,EAAAA,EAAAA,IAAIR,EAASG,GAC1BM,GAAaC,EAAAA,EAAAA,IAAqBH,EAAYT,GAEpDW,EAAWE,GACT,iBACA,SAACC,GACC,IAAMC,EACHD,EAASE,iBAAmBF,EAASG,WAAc,IAC1C,QAAZhB,GAAqBT,EAAa0B,KAAKC,MAAMJ,IACrCD,EAASM,KAQnB,IACA,SAACC,GAAY,IACb,YACEC,EAAAA,EAAAA,IAAeX,EAAWG,SAASJ,KAAKa,MAAK,SAACD,GAC5C1B,GAAU,SAAC4B,GACT,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYD,GAAI,IAAAE,EAAAA,EAAAA,GAAA,GAAGzB,EAAUqB,GAC/B,GACF,GACF,GAEJ,CAE2BK,CAAW5C,EAAO,MAAQ,GAAG,CAACA,IAIzD,IAAM6C,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAb,KAAAa,EAAAC,MAAA,OAET,OADlBJ,EAAEK,iBACFC,QAAQC,IAAI1D,GAAMsD,EAAAC,KAAA,EACAI,EAAAA,EAAMC,KAAK,WAASlB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO9B,GAAM,IAAErB,SAAAA,KAAW,OAA1D6D,EAAGE,EAAAO,KACT/C,GAASgD,EAAAA,EAAAA,IAAQV,EAAIW,OAEN,MAAfX,EAAIY,QAAkBxE,GAAiB,GAClCC,GACHC,GAAkB,GACnB,wBAAA4D,EAAAW,OAAA,GAAAf,EAAA,KAEF,gBAXiBgB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAqBZC,EAAiB,eAAAC,GAAAvB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsB,EAAOpB,GAAC,IAAAqB,EAAAC,EAAA,OAAAzB,EAAAA,EAAAA,KAAAK,MAAA,SAAAqB,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAnB,MAAA,OAEZ,OADdiB,EAAarB,EAAEwB,OAAOC,MAAM,GAClC3E,EAASuE,GAAWE,EAAAnB,KAAA,GACAsB,EAAAA,EAAAA,IAAmBL,GAAW,OAA9CC,EAAOC,EAAAb,KACXxD,EAAYoE,GAAQ,wBAAAC,EAAAT,OAAA,GAAAM,EAAA,KAErB,gBANsBO,GAAA,OAAAR,EAAAH,MAAA,KAAAC,UAAA,KASjBW,GACJC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACiB,MAAd1E,GACCwE,EAAAA,EAAAA,KAAA,UACEG,MAAO,CAAEC,MAAO,WAChBC,QAASxC,EACTyC,UAAU,8CAA6CJ,SAEtD1E,EAAY,EAAI,GAAK,SAGxB,KAON,OACE+E,EAAAA,EAAAA,MAAA,OAAKD,UAAU,kFAAiFJ,SAAA,EAC9FF,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACC,OArBD,eAqBiBC,mBArCL,SAACvC,GAC1BA,EAAEK,iBACFhE,GAAiB,GACZC,GACHC,GAAkB,EAEtB,EA+BwEqF,QAASA,KAC7EC,EAAAA,EAAAA,KAAA,OAAKM,UAAU,sCAAqCJ,UAClDK,EAAAA,EAAAA,MAAA,OAAKD,UAAU,kDAAiDJ,SAAA,EAC5D9E,IACA4E,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,SAAOW,QAAQ,MAAKT,UAClBK,EAAAA,EAAAA,MAAA,OAAKD,UAAU,4DAA2DJ,SAAA,EACxEF,EAAAA,EAAAA,KAAA,SACEM,UAAU,kBACVM,GAAG,MAAMC,KAAK,OAAOC,OAAO,UAAUC,SAAU,SAAC5C,GAAC,OAAKkB,EAAkBlB,EAAE,KAC7EoC,EAAAA,EAAAA,MAAA,MAAID,UAAU,6DAA4DJ,SAAA,EACxEF,EAAAA,EAAAA,KAACgB,EAAAA,IAAuB,CAACC,SAAU,KAAM,6CAQnDjB,EAAAA,EAAAA,KAAA,YACEY,GAAG,WACHN,UAAU,uHACV7D,KAAK,OACLyE,YAAY,iBACZC,IAAK,EACLJ,SAtHW,SAAC5C,GACpBtC,GAAU,SAAA4B,GACR,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYD,GAAI,IAAAE,EAAAA,EAAAA,GAAA,GAAGQ,EAAEwB,OAAOlD,KAAO0B,EAAEwB,OAAOyB,OAC9C,GACF,EAmHUC,UAAW,aAMvB,C,uGCpIMhF,GAAMiF,EAAAA,EAAAA,IAXW,CACrBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKJC,GAAOC,EAAAA,EAAAA,MACPC,EAAW,IAAIC,EAAAA,GAC5B,M,sDCqBA,IAnCmB,SAAH3H,GAQT,IAPLmG,EAAMnG,EAANmG,OACAC,EAAkBpG,EAAlBoG,mBACAX,EAAOzF,EAAPyF,QACAmC,EAAO5H,EAAP4H,QACAC,EAAQ7H,EAAR6H,SACAC,EAAS9H,EAAT8H,UACAC,EAAS/H,EAAT+H,UAKA,OACErC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKM,UAJP,0HAIyBJ,UACrBK,EAAAA,EAAAA,MAAA,OAAKD,UAAU,oEAAmEJ,SAAA,CAC/EQ,GAAsB0B,GACrBpC,EAAAA,EAAAA,KAAA,UACEM,UAAU,8KACVD,QAASK,EAAmBR,SAC1BkC,IAAYpC,EAAAA,EAAAA,KAACsC,EAAAA,IAAY,CAACrB,SAAU,OAEtC,IAEJjB,EAAAA,EAAAA,KAAA,MAAIM,UAAU,sBAAqBJ,SAAEO,IACpCV,EACAoC,EACAE,EACAH,QAKX,C","sources":["components/Uploads/AddVideo.jsx","firebase.js","fragments/Navigation.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage'\r\nimport app from \"../../firebase.js\"\r\nimport axios from 'axios';\r\nimport Navigation from '../../fragments/Navigation.jsx';\r\nimport { getDataURLFromFile } from '../../fragments/helper';\r\nimport { AiOutlineVideoCameraAdd } from 'react-icons/ai';\r\nimport { addPost } from '../../redux/postsSlice.js';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst AddVideo = ({ postType, setToggleAddpost, toggleAddpost, setToggleAddVideo }) => {\r\n  const [video, setVideo] = useState(undefined)\r\n  const [videoSrc, setVideoSrc] = useState(null)\r\n  const [videoPerc, setVideoPerc] = useState(0)\r\n  const [inputs, setInputs] = useState({})\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setInputs(prev => {\r\n      return { ...prev, [e.target.name]: e.target.value }\r\n    })\r\n  }\r\n\r\n\r\n  const uploadFile = (file, urlType) => {\r\n    const storage = getStorage(app);\r\n    const fileName = new Date().getTime() + file.name\r\n    const storageRef = ref(storage, fileName)\r\n    const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        urlType === \"Url\" && setVideoPerc(Math.round(progress));\r\n        switch (snapshot.state) {\r\n          case \"paused\":\r\n            break;\r\n          case \"running\":\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n      (error) => { },\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((getDownloadURL) => {\r\n          setInputs((prev) => {\r\n            return { ...prev, [urlType]: getDownloadURL }\r\n          });\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => { video && uploadFile(video, \"Url\"); }, [video]);\r\n\r\n\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    console.log(video)\r\n    const res = await axios.post(\"/videos\", { ...inputs, postType })\r\n    dispatch(addPost(res.data))\r\n\r\n    res.status === 200 && setToggleAddpost(false)\r\n    if (!toggleAddpost) {\r\n      setToggleAddVideo(false)\r\n    }\r\n\r\n  }\r\n\r\n  const handleBackBtnCLick = (e) => {\r\n    e.preventDefault();\r\n    setToggleAddpost(false)\r\n    if (!toggleAddpost) {\r\n      setToggleAddVideo(false)\r\n    }\r\n  }\r\n\r\n  const handleVideoChange = async (e) => {\r\n    const video_file = e.target.files[0]\r\n    setVideo(video_file)\r\n    let dataUrl = await getDataURLFromFile(video_file)\r\n    setVideoSrc(dataUrl)\r\n\r\n  }\r\n\r\n  const header = \"Upload Video\"\r\n  const savebtn =\r\n    <>\r\n      {videoPerc === 100 ? (\r\n        <button\r\n          style={{ color: \"#00acee\" }}\r\n          onClick={handleUpload}\r\n          className=\"flex flex-col items-center absolute right-4\"\r\n        >\r\n          {videoPerc > 1 ? \"\" : \"Post\"}\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-black flex flex-col top-0 overflow-scroll z-10 absolute w-full\">\r\n      <Navigation header={header} handleBackBtnCLick={handleBackBtnCLick} savebtn={savebtn} />\r\n      <div className=\"pt-[50px] h-[100dvh] hide-scrollbar\">\r\n        <div className='flex flex-col gap-[20px] w-full h-full p-[20px]'>\r\n          {!videoSrc && (\r\n            <>\r\n              <label htmlFor='vid'>\r\n                <div className='flex flex-row items-center justify-start w-full gap-[2px]'>\r\n                  <input\r\n                    className='hidden p-[10px]'\r\n                    id='vid' type=\"file\" accept=\"video/*\" onChange={(e) => handleVideoChange(e)} />\r\n                  <h2 className='flex flex-row color-gray-500 gap-4 font-normal text-xl m-6'>\r\n                    <AiOutlineVideoCameraAdd fontSize={50} />\r\n                    Select videos from your gallery\r\n                  </h2>\r\n                </div>\r\n              </label>\r\n            </>\r\n          )}\r\n\r\n          <textarea\r\n            id='textarea'\r\n            className=\"rounded-[6px] p-[10px] outline-none border-2 border-[#999] resize-none bg-[#f5f5f5] dark:bg-[#202020] hide-scrollbar\"\r\n            name=\"desc\"\r\n            placeholder=\"Add caption...\"\r\n            row={8}\r\n            onChange={handleChange}\r\n            maxLength={200}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default AddVideo","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth, GoogleAuthProvider} from \"firebase/auth\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDqf0PFlXP0sZe2Ff-ncFhxbC2HwVtXyEM\",\r\n  authDomain: \"video-ceedb.firebaseapp.com\",\r\n  projectId: \"video-ceedb\",\r\n  storageBucket: \"video-ceedb.appspot.com\",\r\n  messagingSenderId: \"265928480230\",\r\n  appId: \"1:265928480230:web:f9ec6678d345056b0a3227\",\r\n  measurementId: \"G-LP51K47LK9\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth();\r\nexport const provider = new GoogleAuthProvider();\r\nexport default app;\r\n\r\n","import React from \"react\";\r\nimport { TfiArrowLeft } from \"react-icons/tfi\";\r\n\r\nconst Navigation = ({\r\n  header,\r\n  handleBackBtnCLick,\r\n  savebtn,\r\n  nextbtn,\r\n  savebtn2,\r\n  cancelbtn,\r\n  searchbar,\r\n}) => {\r\n  const styles =\r\n    \" flex flex-row top-0 z-10 absolute w-full lg:border-b-[3px] border-[#f5f5f5] dark:border-[#202020] h-[50px] lg:h-[60px]\";\r\n\r\n  return (\r\n    <>\r\n      <div className={styles}>\r\n        <div className=\"w-full h-full relative items-center justify-around flex flex-row \">\r\n          {handleBackBtnCLick || cancelbtn ? (\r\n            <button\r\n              className=\"flex flex-row cursor-pointer left-0 w-[42px] h-[42px] absolute ml-[4px] items-center hover:border-2 hover:text-[#00acee] border-[#00acee] justify-center hover:rounded-full\"\r\n              onClick={handleBackBtnCLick}>\r\n              {!cancelbtn ? <TfiArrowLeft fontSize={25} /> : cancelbtn}\r\n            </button>\r\n          ) : \"\"}\r\n\r\n          <h2 className=\"font-medium text-xl\">{header}</h2>\r\n          {savebtn}\r\n          {savebtn2}\r\n          {searchbar}\r\n          {nextbtn}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n"],"names":["_ref","postType","setToggleAddpost","toggleAddpost","setToggleAddVideo","_useState","useState","undefined","_useState2","_slicedToArray","video","setVideo","_useState3","_useState4","videoSrc","setVideoSrc","_useState5","_useState6","videoPerc","setVideoPerc","_useState7","_useState8","inputs","setInputs","dispatch","useDispatch","useEffect","file","urlType","storage","getStorage","app","fileName","Date","getTime","name","storageRef","ref","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","Math","round","state","error","getDownloadURL","then","prev","_objectSpread","_defineProperty","uploadFile","handleUpload","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","res","wrap","_context","next","preventDefault","console","log","axios","post","sent","addPost","data","status","stop","_x","apply","arguments","handleVideoChange","_ref3","_callee2","video_file","dataUrl","_context2","target","files","getDataURLFromFile","_x2","savebtn","_jsx","_Fragment","children","style","color","onClick","className","_jsxs","Navigation","header","handleBackBtnCLick","htmlFor","id","type","accept","onChange","AiOutlineVideoCameraAdd","fontSize","placeholder","row","value","maxLength","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","provider","GoogleAuthProvider","nextbtn","savebtn2","cancelbtn","searchbar","TfiArrowLeft"],"sourceRoot":""}