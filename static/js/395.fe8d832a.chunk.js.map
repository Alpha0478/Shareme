{"version":3,"file":"static/js/395.fe8d832a.chunk.js","mappings":"yOAsEA,UArDgB,SAAHA,GAA6B,IAAvBC,EAAgBD,EAAhBC,iBAITC,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAAjDH,YACFI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACflB,EAAY,CAADgB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACKC,EAAAA,EAAMC,IAAI,gBAAgB,KAAD,EAArCN,EAAGE,EAAAK,MACTC,EAAAA,EAAAA,GAAiB,CAACC,QAAQ,sBAC1BnB,GAASoB,EAAAA,EAAAA,IAAaV,IACtBR,EAAS,KAXXP,GAAiB,GAYM,wBAAAiB,EAAAS,OAAA,GAAAZ,EAAA,KAExB,kBARiB,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,KAUZC,EAAS,SAAHC,GAA6B,IAAxBC,EAAID,EAAJC,KAAMC,EAAIF,EAAJE,KAAMC,EAAIH,EAAJG,KAC3B,OACEC,EAAAA,EAAAA,MAAA,UAAQC,UAAU,8BACjBC,QAASL,EAAKM,SAAA,EAEbC,EAAAA,EAAAA,KAACN,EAAI,CAACO,SAAU,GAAIJ,UAAU,oCAC7BF,IAGP,EAEA,OAEEC,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAH,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEH,UAAU,gGACVC,QAAS,kBAAMpC,GAAiB,EAAM,KAExCsC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,6IAA4IE,UACzJH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mFAAkFE,SAAA,EAC/FC,EAAAA,EAAAA,KAACT,EAAM,CAACG,KAAMS,EAAAA,IAAYR,KAAK,UAC/BK,EAAAA,EAAAA,KAACT,EAAM,CAACG,KAAMU,EAAAA,IAAYT,KAAK,sBAC/BK,EAAAA,EAAAA,KAACT,EAAM,CAACG,KAAMW,EAAAA,IAASV,KAAK,aAC5BK,EAAAA,EAAAA,KAACT,EAAM,CAACG,KAAMY,EAAAA,IAAaX,KAAK,cAChCK,EAAAA,EAAAA,KAACO,EAAAA,EAAK,IAEL5C,IACDqC,EAAAA,EAAAA,KAACT,EAAM,CAACE,KAAM,kBAAMtB,GAAc,EAAEuB,KAAMc,EAAAA,IAAcb,KAAK,mBAOvE,C,gEC3CA,IAvBc,WACV,IAAAc,GAAgCC,EAAAA,EAAAA,WAAS,kBAAMC,KAAKC,MAAMC,aAAaC,QAAQ,SAAS,IAACC,GAAAC,EAAAA,EAAAA,GAAAP,EAAA,GAAlFQ,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAc5B,OAZAI,EAAAA,EAAAA,YAAU,WACNN,aAAaO,QAAQ,QAAST,KAAKU,UAAUJ,IACzCA,EACAK,SAASC,gBAAgBC,UAAUC,IAAI,QAEvCH,SAASC,gBAAgBC,UAAUE,OAAO,OAElD,GAAG,CAACT,KAMArB,EAAAA,EAAAA,MAAA,UAAQC,UAAU,iDAAiDC,QAAS,kBAAMoB,GAAaD,EAAS,EAAClB,SAAA,CACpGkB,GAAWjB,EAAAA,EAAAA,KAAC2B,EAAAA,IAAU,CAAC1B,SAAU,GAAIJ,UAAU,qCAAsCG,EAAAA,EAAAA,KAAC4B,EAAAA,IAAW,CAAC3B,SAAU,GAAIJ,UAAU,mBAC1HoB,EAAW,QAAU,OAAO,UAGzC,C","sources":["components/Sidebar.jsx","components/Theme.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { FaSignOutAlt } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport {\r\n  TfiFlagAlt,\r\n  TfiHelpAlt,\r\n  TfiLock,\r\n  TfiSettings,\r\n} from \"react-icons/tfi\";\r\nimport axios from \"axios\";\r\nimport { logoutSucces } from \"../redux/userSlice.js\";\r\nimport Theme from './Theme.jsx'\r\nimport { RestartAnimation } from \"../App.js\";\r\n\r\n\r\n\r\nconst Sidebar = ({ setToggleSidebar}) => {\r\n  const handleCloseSidebar = () => {\r\n    setToggleSidebar(false);\r\n  };\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = async () => {\r\n    if (currentUser) {\r\n      const res = await axios.get(\"/auth/logout\");\r\n      RestartAnimation({message:\"Logout successful\"})\r\n      dispatch(logoutSucces(res));\r\n      navigate(\"/\");\r\n      handleCloseSidebar();\r\n    }\r\n  };\r\n\r\n  const Button = ({Func, Icon, Name }) => {\r\n    return (\r\n      <button className=\"flex flex-row gap-3 p-5 p-5\"\r\n       onClick={Func}\r\n      >\r\n        <Icon fontSize={20} className=\"text-[#606060] dark:text-[#999]\"/>\r\n        {Name}\r\n      </button>\r\n    )\r\n  }\r\n\r\n  return (\r\n\r\n    <>\r\n      <div\r\n        className=\"absolute flex flex-col h-[100dvh] overflow-y-hidden bg-[#000000a7] hide-scrollbar z-10 w-full\"\r\n        onClick={() => setToggleSidebar(false)}\r\n      ></div>\r\n      <div className=\"bg-[#f5f5f5] dark:bg-[#202020] overflow-y-hidden flex flex-col fixed h-[100vh] hide-scrollbar w-3/5 lg:w-1/4 z-10 border-r border-gray-200\">\r\n        <div className=\" mt-[70px] flex flex-col overflow-y-hidden absolute h-full w-full hide-scrollbar\">\r\n          <Button Icon={TfiHelpAlt} Name=\"Help\"/>\r\n          <Button Icon={TfiFlagAlt} Name=\"Report a problem\"/>\r\n          <Button Icon={TfiLock} Name=\"Privacy\" />\r\n          <Button Icon={TfiSettings} Name=\"Settings\" />\r\n          <Theme />\r\n          \r\n          {currentUser &&(\r\n          <Button Func={() => handleLogout()} Icon={FaSignOutAlt} Name=\"Log out\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n  );\r\n};\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { FaToggleOff, FaToggleOn } from 'react-icons/fa'\r\n\r\nconst Theme = () => {\r\n    const [darkMode, setDarkMode] = useState(() => JSON.parse(localStorage.getItem(\"theme\")))\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"theme\", JSON.stringify(darkMode));\r\n        if (darkMode) {\r\n            document.documentElement.classList.add(\"dark\")\r\n        } else {\r\n            document.documentElement.classList.remove(\"dark\")\r\n        }\r\n    }, [darkMode]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <button className=\"flex flex-row cursor-pointer text-sm gap-3 p-5\" onClick={() => setDarkMode(!darkMode)}>\r\n            {darkMode ? <FaToggleOn fontSize={20} className='text-[#606060] dark:text-[#999]'/> : <FaToggleOff fontSize={20} className='text-[#606060]'/>}\r\n            {darkMode ? \"Light\" : \"Dark\"} Mode\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Theme\r\n"],"names":["_ref","setToggleSidebar","currentUser","useSelector","state","user","dispatch","useDispatch","navigate","useNavigate","handleLogout","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","RestartAnimation","message","logoutSucces","stop","apply","arguments","Button","_ref3","Func","Icon","Name","_jsxs","className","onClick","children","_jsx","fontSize","_Fragment","TfiHelpAlt","TfiFlagAlt","TfiLock","TfiSettings","Theme","FaSignOutAlt","_useState","useState","JSON","parse","localStorage","getItem","_useState2","_slicedToArray","darkMode","setDarkMode","useEffect","setItem","stringify","document","documentElement","classList","add","remove","FaToggleOn","FaToggleOff"],"sourceRoot":""}