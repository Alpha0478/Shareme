{"version":3,"file":"static/js/6.0582c7bd.chunk.js","mappings":"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","sources":["components/CardImg.jsx","components/VideoCard.jsx","pages/Videos.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst CardImg = ({imageSrc,Func,FromProfile}) => {\r\n    let WIDTH\r\n    let HEIGHT\r\n    if(FromProfile){\r\n        WIDTH = \"100px\"\r\n        HEIGHT = \"100px\"\r\n    }else{\r\n        WIDTH = \"46px\"\r\n        HEIGHT = \"46px\"\r\n    }\r\n    return (\r\n        <img\r\n            src={imageSrc}\r\n            alt=\"profile pic\"\r\n            width={WIDTH}\r\n            height={HEIGHT}\r\n            className=\"bg-[#999] rounded-full border-2 object-fit border-[#606060] dark:border-white text-transparent\"\r\n            onClick={Func}\r\n        />\r\n    )\r\n}\r\n\r\nexport default CardImg","import React, { useRef, useState, useEffect, Suspense } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FaPlay } from \"react-icons/fa\";\r\nimport { RiShareForwardFill } from \"react-icons/ri\";\r\nimport { MdComment } from \"react-icons/md\";\r\nimport axios from \"axios\";\r\nimport { IoMdAdd, IoMdHeart, IoMdHeartEmpty } from \"react-icons/io\";\r\nimport { handleFollow, handleLike } from \"../fragments/helper.js\";\r\nimport { likeVideo } from \"../redux/videosSlice.js\";\r\nimport Spinner from \"./Spinner.jsx\";\r\nimport CardImg from \"./CardImg.jsx\";\r\n\r\n\r\nconst VideoCard = ({ video, socket }) => {\r\n  const Comments = React.lazy(() => import(\"./Comments.jsx\"));\r\n  const CardProfile = React.lazy(() => import(\"./CardProfile.jsx\"));\r\n\r\n  const [toggleCardProfile, setToggleCardProfile] = useState(false);\r\n  const [toggleComment, setToggleComment] = useState(false);\r\n  const [playing, setPlaying] = useState(false);\r\n  const [isHover, setIsHover] = useState(true);\r\n  const [channel, setChannel] = useState(\"\");\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  const [callFromVideo, setCallFromVideo] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const postRef = useRef(null);\r\n  const videoRef = useRef();\r\n\r\n  let callback = (entries, observer) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        // videoRef?.current.play()\r\n        setPlaying(true);\r\n        setIsHover(false);\r\n      } else if (videoRef.current !== null && !entry.isIntersecting) {\r\n        videoRef?.current.pause();\r\n        setPlaying(false);\r\n        setIsHover(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let observer = new IntersectionObserver(callback, { threshold: 0.5 });\r\n    if (videoRef?.current) {\r\n      observer.observe(videoRef?.current);\r\n    }\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [videoRef]);\r\n\r\n  useEffect(() => {\r\n  const fetchUser = async () => {\r\n    try {\r\n      const res = await axios.get(`users/find/${video.userId}`);\r\n      setChannel(res.data);\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.log(\"No Connnections\");\r\n      }\r\n    }\r\n  };\r\n    fetchUser();\r\n  }, [video.userId]);\r\n\r\n  const handlePlay = () => {\r\n    if (playing) {\r\n      handlePause();\r\n    } else {\r\n      setPlaying(true);\r\n      videoRef.current.play();\r\n      setIsHover(false);\r\n    }\r\n  };\r\n\r\n  const handlePause = () => {\r\n    setPlaying(false);\r\n    videoRef?.current.pause();\r\n    setIsHover(true);\r\n  };\r\n\r\n  const handleProfile = (id) => {\r\n    setCallFromVideo(true);\r\n    handlePause();\r\n   \r\n  };\r\n\r\n  const handleNotification = (msg) => {\r\n    socket?.emit(\"sendNotification\", {\r\n      senderName: currentUser?.name,\r\n      receiverName: channel?.name,\r\n      msg,\r\n    });\r\n  };\r\n\r\n  const handleViewComment = () => {\r\n    setCallFromVideo(true);\r\n    setToggleComment(true);\r\n    handlePause();\r\n  };\r\n\r\n\r\n\r\n  const ProfileStyle = \"hide-scrollbar z-100 h-screen w-full lg:w-3/4 fixed\";\r\n\r\n  return (\r\n    <>\r\n\r\n      <div\r\n        className=\"bg-black h-full relative w-full z-0 snap-end snap-always\"\r\n      // onMouseLeave={handlePause}\r\n      // onDoubleClick={handleLike(video?._id)}\r\n      >\r\n        <div className=\"flex flex-col h-screen w-full items-center justify-center\">\r\n\r\n          <div ref={postRef} className=\"flex flex-col top-0 absolute overflow-hidden z-60 h-full  w-full lg:w-1/2\">\r\n            <text className=\"absolute text-white bottom-[30px] left-[5px] z-50 font-medium ml-2 w-[20%] h-5 \">\r\n              {channel?.name}\r\n            </text>\r\n\r\n            <div className=\"flex flex-col absolute right-0 bottom-[80px] p-[4px] gap-[20px] rounded-[6px] w-auto items-center bg-none lg:bg-sky-300\">\r\n              <div className=\"flex flex-col z-50 relative items-center cursor-pointer\">\r\n           \r\n                <CardImg imageSrc={channel?.profileUrl} Func={()=> setToggleCardProfile(true)}/>\r\n                {currentUser?._id !== video.userId && (\r\n                  <>\r\n                    {currentUser?.subscribedUsers?.includes(channel?._id) ? (\r\n                      \" \"\r\n                    ) : (\r\n                      <>\r\n                        {currentUser && (\r\n                          <div className=\"absolute w-[20px] h-[20px] bottom-[-6px] rounded-full text-[50px] text-white bg-[#00acee]\">\r\n                            <IoMdAdd\r\n                              fontSize={20}\r\n                              onClick={() =>\r\n                                handleFollow({\r\n                                  userId: video.userId,\r\n                                  channelId: channel?._id,\r\n                                  handleNotification,\r\n                                  dispatch,\r\n                                })\r\n                              }\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n              {currentUser && (\r\n                <>\r\n                  <button\r\n                    className=\"cursor-pointer\"\r\n                    onClick={() =>\r\n                      handleLike({\r\n                        id: video?._id,\r\n                        postState: likeVideo,\r\n                        post: video.postType + \"s\",\r\n                        userId: currentUser?._id,\r\n                        dispatch,\r\n                        handleNotification,\r\n                      })\r\n                    }\r\n                  >\r\n                    {video?.likes?.includes(currentUser?._id) ? (\r\n                      <IoMdHeart fontSize={35} style={{ color: \"red\" }} />\r\n                    ) : (\r\n                      <IoMdHeartEmpty fontSize={35} style={{ color: \"white\" }} />\r\n                    )}\r\n                    <text className=\"text-white font-sm\">{video?.likes?.length}</text>\r\n                  </button>\r\n\r\n                  <button style={{ color: \"white\" }}>\r\n                    <MdComment\r\n                      fontSize={35}\r\n                      onClick={() => handleViewComment()}\r\n                    />\r\n                    <text className=\"font-sm\">10K</text>\r\n                  </button>\r\n\r\n                  <button style={{ color: \"white\" }}>\r\n                    <RiShareForwardFill fontSize={35} />\r\n                    <text className=\"font-sm\">10K</text>\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n            <>\r\n              {isHover && (\r\n                <div className=\"flex w-full h-full text-white z-0 items-center justify-center absolute \">\r\n                  <FaPlay fontSize={50} />\r\n                </div>\r\n              )}\r\n\r\n              <video\r\n                className=\"z-5  w-auto h-full  object-cover lg:w-[280px] rounded-none lg:rounded-lg \"\r\n                id=\"post\"\r\n                src={video.Url}\r\n                loop\r\n                ref={videoRef}\r\n                onClick={() => handlePlay()}\r\n              />\r\n            </>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {toggleComment && (\r\n        <Suspense fallback={<Spinner />}>\r\n          <Comments\r\n            setToggleComment={setToggleComment}\r\n            post={video}\r\n            handleNotification={handleNotification}\r\n            handlePlay={handlePlay}\r\n            callFromVideo={callFromVideo}\r\n          />\r\n        </Suspense>\r\n      )}\r\n      {toggleCardProfile && (\r\n        <Suspense>\r\n          <CardProfile\r\n            type={video}\r\n            channel={channel}\r\n            setToggleCardProfile={setToggleCardProfile}\r\n          />\r\n        </Suspense>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoCard;\r\n","import React from 'react';\r\nimport VideoCard from '../components/VideoCard.jsx';\r\nimport { videosFetchSuccess } from '../redux/videosSlice.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {fetchVideos,videosUrlEndpoint as cacheKey} from '../components/fetchers/fetch.js'\r\nimport useSWR from 'swr'\r\nimport Spinner from '../components/Spinner.jsx';\r\nimport { TfiInfoAlt } from 'react-icons/tfi';\r\n\r\n\r\nconst Videos = ({socket}) => {\r\n  const dispatch = useDispatch()\r\n  const {videos} = useSelector((state) =>state.videos)\r\n  \r\n  const  {\r\n    isLoading,\r\n    error,\r\n  } =useSWR(cacheKey, fetchVideos, {\r\n    onSuccess: data =>  dispatch(videosFetchSuccess(data))\r\n  })\r\n\r\n\r\n  return (\r\n    <div  id=\"videos\" className=\"flex flex-col h-full absolute bg-black w-full pt-0 mb-0 lg:pt-[25px] hide-scrollbar items-center\">\r\n      <div className='flex flex-col overflow-scroll pt-0 h-full hide-scrollbar w-full lg:w-3/4 snap-mandatory snap-y'>\r\n        {isLoading ?\r\n          <Spinner/>\r\n        : error ?\r\n        <div className=\"flex flex-col  text-lg text-[#cc1a00] h-full w-full items-center justify-center\">\r\n        <TfiInfoAlt fontSize={50}/>\r\n        An error occured\r\n        </div>\r\n        :\r\n        videos?.map((video) => (\r\n          <VideoCard \r\n          key={video._id} \r\n          video={video} \r\n          socket={socket}\r\n          />\r\n        ))\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default  Videos"],"names":["_ref","WIDTH","HEIGHT","imageSrc","Func","FromProfile","_jsx","src","alt","width","height","className","onClick","_currentUser$subscrib","_video$likes","_video$likes2","video","socket","Comments","React","CardProfile","_useState","useState","_useState2","_slicedToArray","toggleCardProfile","setToggleCardProfile","_useState3","_useState4","toggleComment","setToggleComment","_useState5","_useState6","playing","setPlaying","_useState7","_useState8","isHover","setIsHover","_useState9","_useState10","channel","setChannel","currentUser","useSelector","state","user","_useState11","_useState12","callFromVideo","setCallFromVideo","dispatch","useDispatch","postRef","useRef","videoRef","callback","entries","observer","forEach","entry","isIntersecting","current","pause","useEffect","IntersectionObserver","threshold","observe","disconnect","fetchUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","get","concat","userId","sent","data","t0","response","status","console","log","stop","apply","arguments","handlePlay","handlePause","play","handleNotification","msg","emit","senderName","name","receiverName","_jsxs","_Fragment","children","ref","CardImg","profileUrl","_id","subscribedUsers","includes","IoMdAdd","fontSize","handleFollow","channelId","handleLike","id","postState","likeVideo","post","postType","likes","IoMdHeart","style","color","IoMdHeartEmpty","length","MdComment","RiShareForwardFill","FaPlay","Url","loop","Suspense","fallback","Spinner","type","videos","_useSWR","useSWR","cacheKey","fetchVideos","onSuccess","videosFetchSuccess","isLoading","error","TfiInfoAlt","map","VideoCard"],"sourceRoot":""}