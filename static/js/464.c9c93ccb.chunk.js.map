{"version":3,"file":"static/js/464.c9c93ccb.chunk.js","mappings":"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","sources":["components/CardImg.jsx","components/NoteCard.jsx","pages/Note.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst CardImg = ({imageSrc,Func,FromProfile}) => {\r\n    let WIDTH\r\n    let HEIGHT\r\n    if(FromProfile){\r\n        WIDTH = \"100px\"\r\n        HEIGHT = \"100px\"\r\n    }else{\r\n        WIDTH = \"46px\"\r\n        HEIGHT = \"46px\"\r\n    }\r\n    return (\r\n        <img\r\n            src={imageSrc}\r\n            alt=\"profile pic\"\r\n            width={WIDTH}\r\n            height={HEIGHT}\r\n            className=\"bg-[#999] rounded-full border-2 object-fit border-[#606060] dark:border-white text-transparent\"\r\n            onClick={Func}\r\n        />\r\n    )\r\n}\r\n\r\nexport default CardImg","import React, { useRef, useState, useEffect, Suspense } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RiShareForwardFill } from \"react-icons/ri\";\r\nimport { MdComment } from \"react-icons/md\";\r\nimport axios from \"axios\";\r\nimport { IoMdAdd, IoMdHeart, IoMdHeartEmpty } from \"react-icons/io\";\r\nimport { handleFollow, handleLike } from \"../fragments/helper.js\";\r\nimport { likeNote } from \"../redux/notesSlice.js\";\r\nimport Spinner from \"./Spinner.jsx\";\r\nimport { TfiBookmark } from \"react-icons/tfi\";\r\nimport CardImg from \"./CardImg.jsx\";\r\n\r\n\r\nconst NoteCard = ({ note, socket }) => {\r\n  const Comments = React.lazy(() => import(\"./Comments.jsx\"));\r\n  const CardProfile = React.lazy(() => import(\"./CardProfile.jsx\"));\r\n\r\n  const [toggleCardProfile, setToggleCardProfile] = useState(false);\r\n  const [toggleComment, setToggleComment] = useState(false);\r\n  const [channel, setChannel] = useState(\"\");\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const postRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const res = await axios.get(`users/find/${note.userId}`);\r\n        setChannel(res.data);\r\n      } catch (err) {\r\n        if (err.response.status === 500) {\r\n          console.log(\"No Connnections\");\r\n        }\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, [note.userId]);\r\n\r\n  const handleProfile = (id) => {\r\n    setToggleCardProfile(true);\r\n  };\r\n\r\n  const handleNotification = (msg) => {\r\n    socket?.emit(\"sendNotification\", {\r\n      senderName: currentUser?.name,\r\n      receiverName: channel?.name,\r\n      msg,\r\n    });\r\n  };\r\n\r\n  const handleViewComment = () => {\r\n    setToggleComment(true);\r\n  };\r\n\r\n  const handleLiking = () => {\r\n    if (currentUser) {\r\n      if (!isHover) {\r\n        setIsHover(true);\r\n        handleLike({\r\n          id: note?._id,\r\n          postState: likeNote,\r\n          post: note.postType + \"s\",\r\n          userId: currentUser?._id,\r\n          dispatch,\r\n          handleNotification,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          setIsHover(false);\r\n        }, 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-inherit w-full h-full relative z-0 snap-end snap-always\">\r\n        <div className=\"flex flex-col h-screen w-full items-center justify-center\">\r\n          {isHover && (\r\n            <div className=\"flex absolute h-full w-full text-[#00acee] z-100 items-center justify-center\">\r\n              {note?.likes?.includes(currentUser?._id) ? (\r\n                <IoMdHeart fontSize={100} />\r\n              ) : (\r\n                <IoMdHeartEmpty fontSize={100} style={{ color: \"gray\" }} />\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          <div\r\n            ref={postRef}\r\n            className=\"flex flex-col absolute overflow-hidden top-0 z-60 h-full w-full lg:w-1/2 items-center\"\r\n            onDoubleClick={() => handleLiking()}\r\n          >\r\n            <div className=\" w-full h-[60px] relative flex flex-row align-center items-center\">\r\n              <div className=\"items-center m-4 flex flex-col z-50 relative\">\r\n        \r\n                <CardImg imageSrc={channel?.profileUrl} Func={()=>handleProfile(channel?.name)}/>\r\n\r\n                {currentUser?._id !== note.userId && (\r\n                  <>\r\n                    {currentUser?.subscribedUsers?.includes(channel?._id) ? (\r\n                      \" \"\r\n                    ) : (\r\n                      <>\r\n                        {currentUser && (\r\n                          <div className=\"absolute w-[20px] h-[20px] bottom-[-6px] rounded-full text-[50px] text-white bg-[#00acee]\">\r\n                            <IoMdAdd\r\n                              fontSize={20}\r\n                              onClick={() =>\r\n                                handleFollow({\r\n                                  userId: note.userId,\r\n                                  channelId: channel?._id,\r\n                                  handleNotification,\r\n                                  dispatch,\r\n                                })\r\n                              }\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"flex flex-row z-50 font-medium ml-2 w-[20%] h-5 \">\r\n                {/* {channel?.name} */}\r\n                channelname\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"rounded-[30px] border border-[#999] flex flex-row absolute items-center gap-[30px] bottom-[30px] w-[70%] p-2 w-auto items-center \">\r\n\r\n              <>\r\n                <button style={{ color: \"gray\" }} className=\"items-center cursor-pointer flex flex-row\" onClick={() => handleLiking()}>\r\n                  {note?.likes?.includes(currentUser?._id) ? (\r\n                    <IoMdHeart fontSize={35} style={{ color: \"#00acee\" }} />\r\n                  ) : (\r\n                    <IoMdHeartEmpty fontSize={35} />\r\n                  )}\r\n                  <text className=\"font-sm\">{note?.likes?.length}</text>\r\n                </button>\r\n\r\n                <button style={{ color: \"gray\" }}>\r\n                  <MdComment\r\n                    fontSize={35}\r\n                    onClick={() => handleViewComment()}\r\n                  />\r\n                </button>\r\n\r\n                <button style={{ color: \"gray\" }}>\r\n                  <RiShareForwardFill fontSize={35} />\r\n                </button>\r\n\r\n                <button style={{ color: \"gray\" }}>\r\n                  <TfiBookmark fontSize={30} />\r\n                </button>\r\n              </>\r\n            </div>\r\n            <>\r\n              <div className=\"p-6 h-full w-full  flex flex-col justify-start overflow-auto hide-scrollbar text-xl\">\r\n                {note.desc}\r\n              </div>\r\n            </>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {toggleComment && (\r\n        <Suspense fallback={<Spinner />}>\r\n          <Comments\r\n            setToggleComment={setToggleComment}\r\n            post={note}\r\n            handleNotification={handleNotification}\r\n          />\r\n        </Suspense>\r\n      )}\r\n      {toggleCardProfile && (\r\n        <Suspense>\r\n          <CardProfile\r\n            type={note}\r\n            channel={channel}\r\n            setToggleCardProfile={setToggleCardProfile}\r\n          />\r\n        </Suspense>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoteCard;\r\n","import React from 'react';\r\nimport NoteCard from '../components/NoteCard.jsx';\r\nimport { notesFetchSuccess } from '../redux/notesSlice.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {fetchNotes,notesUrlEndpoint as cacheKey} from '../components/fetchers/fetch.js'\r\nimport useSWR from 'swr'\r\nimport Spinner from '../components/Spinner.jsx';\r\nimport { RestartAnimation } from '../App.js';\r\nimport { TfiInfoAlt } from 'react-icons/tfi';\r\n\r\n\r\n\r\n\r\nconst Notes = ({socket}) => {\r\n  const dispatch = useDispatch()\r\n  const {notes} = useSelector((state) =>state.notes)\r\n  \r\n  const  {\r\n    isLoading,\r\n    error,\r\n  } =useSWR(cacheKey, fetchNotes, {\r\n    onSuccess: data =>  dispatch(notesFetchSuccess(data))\r\n  })\r\n\r\n\r\n  return (\r\n    <div  id=\"videos\" className=\"flex flex-col absolute h-full w-full pt-0 mb-0 lg:pt-[25px] hide-scrollbar items-center\">\r\n      <div className='flex flex-col overflow-scroll pt-0 h-full hide-scrollbar w-full lg:w-3/4 snap-mandatory snap-y'>\r\n        {isLoading ?\r\n          <Spinner/>\r\n        : error ?\r\n        <div className=\"flex flex-col  text-lg text-[#cc1a00] h-full w-full items-center justify-center\">\r\n        <TfiInfoAlt fontSize={50}/>\r\n        An error occured\r\n        </div>\r\n        :\r\n        notes?.map((note) => (\r\n          <NoteCard \r\n          key={note._id} \r\n          note={note} \r\n          socket={socket}\r\n          />\r\n        ))\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default  Notes"],"names":["_ref","WIDTH","HEIGHT","imageSrc","Func","FromProfile","_jsx","src","alt","width","height","className","onClick","_note$likes","_currentUser$subscrib","_note$likes2","_note$likes3","note","socket","Comments","React","CardProfile","_useState","useState","_useState2","_slicedToArray","toggleCardProfile","setToggleCardProfile","_useState3","_useState4","toggleComment","setToggleComment","_useState5","_useState6","channel","setChannel","currentUser","useSelector","state","user","_useState7","_useState8","isHover","setIsHover","dispatch","useDispatch","postRef","useRef","useEffect","fetchUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","get","concat","userId","sent","data","t0","response","status","console","log","stop","apply","arguments","handleNotification","msg","emit","senderName","name","receiverName","handleLiking","handleLike","id","_id","postState","likeNote","post","postType","setTimeout","_jsxs","_Fragment","children","likes","includes","IoMdHeart","fontSize","IoMdHeartEmpty","style","color","ref","onDoubleClick","CardImg","profileUrl","subscribedUsers","IoMdAdd","handleFollow","channelId","length","MdComment","RiShareForwardFill","TfiBookmark","desc","Suspense","fallback","Spinner","type","notes","_useSWR","useSWR","cacheKey","fetchNotes","onSuccess","notesFetchSuccess","isLoading","error","TfiInfoAlt","map","NoteCard"],"sourceRoot":""}