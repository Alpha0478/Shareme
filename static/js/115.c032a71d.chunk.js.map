{"version":3,"file":"static/js/115.c032a71d.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","_ref","envelope","derivative","_ref$duration","duration","_ref$bounce","bounce","_ref$velocity","velocity","_ref$mass","mass","warning","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","Math","exp","d","e","pow","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","options","some","undefined","spring","resolveSpring","keyframes","restDelta","restSpeed","_excluded","origin","state","done","value","_getSpringOptions","springOptions","_objectSpread","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","angularFreq","t","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","current","currentVelocity","calcGeneratorVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","velocitySampleDuration","resolveValue","prevT","max","velocityPerSecond","instantAnimationState","isBezierDefinition","easing","Array","isArray","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","_ref2","_slicedToArray","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","hasOwnProperty","Element","results","supports","_loop","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","reverseEasing","backInOut","mirrorEasing","easingLookup","circInOut","anticipate","p","easingDefinitionToFunction","definition","invariant","_definition","hueToRgb","q","mixLinearColor","from","to","v","fromExpo","colorTypes","hex","rgba","hsla","getColorType","find","type","test","asRGBA","color","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mix","transform","mixImmediate","getMixer","startsWith","mixComplex","mixArray","output","_toConsumableArray","numValues","blendValue","fromThis","mixObject","template","complex","createTransformer","originStats","analyseComplexValue","targetStats","numVars","numColors","numNumbers","pipe","values","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","push","interpolate","input","arguments","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","progress","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","absoluteTimes","offset","o","convertOffsetToTimes","defaultOffset","mapTimeToKeyframe","splice","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","performance","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","Set","sampleDelta","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","has","_options$duration","sampleAnimation","pregeneratedKeyframes","animation","element","keyframeOptions","_defineProperty","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","isAnimatable","getKeyframes","transition","isTargetAnimatable","get","getAnimatableNone","isZero","getZeroUnit","_toArray","slice","fillWildcardKeyframes","animateMotionValue","valueTransition","getValueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","getProps","acceleratedAnimation","animateSingleValue","motionValue$1","isMotionValue","motionValue","optimizedAppearDataAttribute","camelToDash","animateTarget","visualElement","_ref2$delay","transitionOverride","_visualElement$makeTa","makeTargetAnimatable","_visualElement$makeTa2","transitionEnd","willChange","getValue","animations","animationTypeState","animationState","getState","valueTarget","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","window","HandoffAppearAnimations","hasAnimated","appearId","shouldReduceMotion","isWillChangeMotionValue","add","remove","all","setTarget","isAnimationControls","isKeyframesTarget","when","delayChildren","staggerChildren","staggerDirection","parseFloat","potentialUnitType","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","acos","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","index","delete","process","createRenderStep","processStep","stepId","processFrame","forEach","requestAnimationFrame","keepAlive","immediate","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","name","isForcedMotionValue","layoutId","scaleCorrectors","convertBoundingBoxToBox","top","left","right","y","bottom","convertBoxToBoundingBox","transformBoxPoints","point","transformPoint","topLeft","bottomRight","scalePoint","scale","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","node","projectionDelta","instance","style","display","layoutScroll","scroll","root","transformBox","hasTransform","latestValues","snapToDefault","Number","isInteger","translateAxis","distance","transformAxis","transforms","_ref3","scaleKey","originKey","axisOrigin","xKeys","yKeys","createDelta","createBox","addScaleCorrector","correctors","assign","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","measureViewportBox","getBoundingClientRect","measurePageBox","rootProjectionNode","viewportBox","splitCSSVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","match","exec","_match","parseCSSVariable","_parseCSSVariable2","token","fallback","resolved","getComputedStyle","getPropertyValue","trim","isCSSVariableToken","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","number","px","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","filter","positionalValues","width","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","height","_ref4","_ref5","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","toType","fromType","findDimensionValueType","numKeyframes","fromIndex","removedTransforms","render","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","setStaticValue","targetBbox","convertChangedValueTypes","_ref12","_ref13","isBrowser","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","variantProps","VisualElement","_this","parent","presenceContext","reducedMotionConfig","visualState","_classCallCheck","this","children","isVariantNode","isControllingVariants","Map","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","triggerBuild","renderInstance","renderState","projection","scheduleRender","baseTarget","initialValues","initial","variantChildren","manuallyAnimateOnMount","_this$scrapeMotionVal","scrapeMotionValuesFromProps","initialMotionValues","_createClass","_props","_prevProps","_this2","visualElementStore","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","unmount","clear","_this3","valueIsTransform","removeOnChange","on","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","preloadedFeatures","projectionId","initialLayoutGroupConfig","ProjectionNodeConstructor","MeasureLayout","_this4","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","Feature","ProjectionNode","MeasureLayoutComponent","dragConstraints","layoutRoot","setOptions","alwaysMeasureLayout","isRefObject","animationType","initialPromotionConfig","feature","isMounted","prevProps","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","transformTemplate","prevPresenceContext","listener","prev","nextValue","prevValue","addValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","variants","getClosestVariantNode","getVariantContext","context","prop","isVariantLabel","child","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValueFromInstance","_a","valueFromInitial","resolveVariantFromProps","getBaseTargetFromProps","eventName","SubscriptionManager","_this$events$eventNam","_len","args","_key2","apply","DOMVisualElement","_VisualElement","_inherits","_super","_createSuper","compareDocumentPosition","vars","transformValues","getOrigin","checkTargetForNewValues","parsed","MotionContext","PresenceContext","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useCreateMotionContext","_getCurrentTreeVarian","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","join","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","createVisualElement","useRender","useVisualState","Component","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","useLayoutId","useConstant","lazyContext","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","updateFeatures","animateChanges","useVisualElement","React","Provider","useCallback","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","createHtmlRenderState","transformOrigin","copyRawValuesOnly","useStyle","buildHTMLStyles","enableHardwareAcceleration","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","default","createSvgRenderState","attrs","useSVGProps","_isStatic","visualProps","buildSVGAttrs","isSVGTag","rawStyles","createUseRender","forwardMotionProps","ref","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","svgMotionConfig","dimensions","getBBox","tagName","renderSVG","htmlMotionConfig","addDomEvent","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","addPointerInfo","addPointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","addHoverEvent","isActive","callbackName","info","whileHover","setActive","HoverGesture","_Feature","FocusGesture","isFocusVisible","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","margin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prevLength","animateVariant","variant","resolveVariant","_ref$transition","getAnimation","getChildAnimations","size","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","isNear","maxDistance","calcAxisDelta","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","measuredConstraints","calcViewportConstraints","userConstraints","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","_this$props2","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","_key","isSVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","read","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","hasRotate","rotateZ","resetValues","_b","styleProp","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","createDomVisualElement","SVGVisualElement","HTMLVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","str","replace","toLowerCase","checkStringStartsWith","isCSSVariableName","cssVariableRegex","SVGElement","defaultValueType","getDefaultValueType","defaultValueTypes","numberValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateX","translateY","translateZ","perspective","transformPerspective","progressPercentage","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","renderHTML","translateAlias","numTransforms","getValueAsType","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","_ref$allowTransformNo","allowTransformNone","transformString","transformName","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","getProjectionStyles","setProperty","newValues","camelCaseAttributes","getAttribute","_get","_getPrototypeOf","dashKeys","array","camelKeys","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","viewBox","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","substring","getCurrent","currentValues","isNumericalString","isZeroValueString","valueTypes","findValueType","setMotionValue","_ref$transitionEnd","resolveFinalValueInKeyframes","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","transitionOrigin","arr","item","any","fillOffset","remaining","offsetProgress","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","seconds","milliseconds","init","frameDuration","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","subscription","getSize","eventManagers","passiveEffect","stopPassiveEffect","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","r","parseInt","splitColor","_ref$alpha","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","_v$match","floatRegex","_v$match2","maxDefaults","applyDefaultFilter","_v$slice$split","_v$slice$split2","unit","functionRegex","functions","cssVarTokeniser","regex","countKey","colorTokeniser","colorRegex","numberTokeniser","tokenise","_info$values","tokenised","originalValue","toString","parseComplexValue","_analyseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}