{"version":3,"file":"static/js/196.6c43a2cf.chunk.js","mappings":"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","sources":["components/CardImg.jsx","fragments/Navigation.jsx","components/Noty.jsx","pages/Notification.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst CardImg = ({imageSrc,Func,FromProfile}) => {\r\n    let WIDTH\r\n    let HEIGHT\r\n    if(FromProfile){\r\n        WIDTH = \"100px\"\r\n        HEIGHT = \"100px\"\r\n    }else{\r\n        WIDTH = \"46px\"\r\n        HEIGHT = \"46px\"\r\n    }\r\n    return (\r\n        <img\r\n            src={imageSrc}\r\n            alt=\"profile pic\"\r\n            width={WIDTH}\r\n            height={HEIGHT}\r\n            className=\"bg-[#999] rounded-full border-2 object-fit border-[#606060] dark:border-white text-transparent\"\r\n            onClick={Func}\r\n        />\r\n    )\r\n}\r\n\r\nexport default CardImg","import React from \"react\";\r\nimport { TfiArrowLeft } from \"react-icons/tfi\";\r\n\r\nconst Navigation = ({\r\n  header,\r\n  handleBackBtnCLick,\r\n  savebtn,\r\n  nextbtn,\r\n  savebtn2,\r\n  cancelbtn,\r\n  searchbar,\r\n}) => {\r\n  const styles =\r\n    \" flex flex-row top-0 z-10 absolute w-full lg:border-b-[3px] border-[#f5f5f5] dark:border-[#202020] h-[50px] lg:h-[60px]\";\r\n\r\n  return (\r\n    <>\r\n      <div className={styles}>\r\n        <div className=\"w-full h-full relative items-center justify-around flex flex-row \">\r\n          {handleBackBtnCLick || cancelbtn ? (\r\n            <button\r\n              className=\"flex flex-row cursor-pointer left-0 w-[42px] h-[42px] absolute ml-[4px] items-center hover:border-2 hover:text-[#00acee] border-[#00acee] justify-center hover:rounded-full\"\r\n              onClick={handleBackBtnCLick}>\r\n              {!cancelbtn ? <TfiArrowLeft fontSize={25} /> : cancelbtn}\r\n            </button>\r\n          ) : \"\"}\r\n\r\n          <h2 className=\"font-medium text-xl\">{header}</h2>\r\n          {savebtn}\r\n          {savebtn2}\r\n          {searchbar}\r\n          {nextbtn}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState, Suspense } from 'react'\r\nimport { format } from 'timeago.js';\r\nimport CardImg from \"./CardImg.jsx\";\r\n\r\n\r\nconst Noty = ({notification,socket}) => {\r\n  const CardProfile = React.lazy(() => import('./CardProfile.jsx'))\r\n  const [toggleCardProfile,setToggleCardProfile] = useState(false)\r\n  const [channel,setChannel] = useState(\"\")\r\n\r\n  useEffect(()=>{\r\n  const fetchUser = async() =>{\r\n    try{\r\n      const res = await axios.get(`users/find/${notification.userId}`)\r\n      setChannel(res.data)\r\n\r\n      return ()=>{\r\n        setChannel(\"\")\r\n      }\r\n    }catch(err){\r\n      if(err.response.status === 500){\r\n        console.log(\"No Connnections\")\r\n      }\r\n    }\r\n  }\r\n    fetchUser()\r\n},[notification.userId])\r\n\r\nconst handleProfile = () =>{\r\n  setToggleCardProfile(true)\r\n}\r\n\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-center items-center ml-[6px] my-[6px] relative w-full hide-scrollbar'>\r\n   \r\n        <CardImg imageSrc={channel?.profileUrl} Func={()=>handleProfile(channel?.name)}/>\r\n\r\n        <div className='flex flex-col w-full p-[6px] '>\r\n            <div>\r\n              {notification.desc}\r\n              <span className='flex-shrink-0' style={{color: \"#999\"}}>\r\n                <span className='px-1'>.</span>\r\n                <span className='font-xs'>{format(notification.createdAt)}</span>\r\n              </span>\r\n            </div>\r\n        </div>\r\n      </div>\r\n           {toggleCardProfile &&(\r\n            <Suspense>\r\n              <CardProfile\r\n                channel={channel} \r\n                setToggleCardProfile={setToggleCardProfile} \r\n              />\r\n            </Suspense>\r\n      \r\n          )}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Noty","import React, { useState}  from 'react';\r\nimport Navigation from '../fragments/Navigation.jsx';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Noty from '../components/Noty.jsx'\r\nimport useSWR from 'swr'\r\nimport Spinner from '../components/Spinner.jsx'\r\nimport { RestartAnimation } from '../App.js';\r\nimport { TfiInfoAlt } from 'react-icons/tfi';\r\n\r\nconst Notification = ({setCount,socket}) => {\r\n    const [notifications,setNotifications] = useState([])\r\n    const {currentUser} = useSelector(state=>state.user)\r\n\r\n    const Api = axios.create({\r\n      baseURL: \"http://192.168.0.107:8800\"\r\n    })\r\n    \r\n     const notificationsUrlEndpoint =\"/api/notification\"\r\n  \r\n    \r\n     const fetchNotifications = async() =>{\r\n      const res = await Api.get(`${notificationsUrlEndpoint}/${currentUser?._id}`)\r\n      return res.data\r\n    }\r\n  \r\n    const  {\r\n      isLoading,\r\n      error,\r\n    } =useSWR(notificationsUrlEndpoint, fetchNotifications, {\r\n      onSuccess: data =>  setNotifications(data)\r\n    })\r\n    \r\n\r\n  const handleBackBtnCLick= (e) =>{\r\n    e.preventDefault();\r\n    setCount(0)\r\n    localStorage.setItem(\"count\", JSON.stringify(0));\r\n\r\n  }\r\nconst header = \"Notifications\"\r\n\r\n  return (\r\n    <div className=\"flex flex-col top-0 overflow-scroll z-10 w-full absolute h-full hide-scrollbar lg:items-center\"\r\n     onMouseLeave={handleBackBtnCLick}\r\n    >\r\n    <Navigation header={header}/>\r\n      <div className='hide-scrollbar flex flex-col h-screen pt-[70px] lg:w-3/4 overflow-scroll items-center'>\r\n        {isLoading ?\r\n         <Spinner/>\r\n         : error ?\r\n         <div className=\"flex flex-col  text-lg text-[#cc1a00] h-full w-full items-center justify-center\">\r\n         <TfiInfoAlt fontSize={50}/>\r\n         An error occured\r\n         </div>\r\n         :notifications.length > 1 ?\r\n        notifications.map(notification =>(\r\n          <Noty\r\n            notification={notification}\r\n            key={notification?._id}\r\n            socket={socket}\r\n          />\r\n         ))\r\n         :\r\n         <h2 className=\"font-base font-normal mt-6 mb-6\" style={{color:\"#00acee\"}} >No Notifications</h2>\r\n        }\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default  Notification\r\n"],"names":["_ref","WIDTH","HEIGHT","imageSrc","Func","FromProfile","_jsx","src","alt","width","height","className","onClick","header","handleBackBtnCLick","savebtn","nextbtn","savebtn2","cancelbtn","searchbar","_Fragment","children","_jsxs","TfiArrowLeft","fontSize","notification","CardProfile","socket","React","_useState","useState","_useState2","_slicedToArray","toggleCardProfile","setToggleCardProfile","_useState3","_useState4","channel","setChannel","useEffect","fetchUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","get","concat","userId","sent","data","abrupt","t0","response","status","console","log","stop","apply","arguments","CardImg","profileUrl","name","desc","style","color","format","createdAt","Suspense","setCount","notifications","setNotifications","currentUser","useSelector","state","user","Api","create","baseURL","notificationsUrlEndpoint","fetchNotifications","_id","_useSWR","useSWR","onSuccess","isLoading","error","onMouseLeave","e","preventDefault","localStorage","setItem","JSON","stringify","Navigation","Spinner","TfiInfoAlt","length","map","Noty"],"sourceRoot":""}