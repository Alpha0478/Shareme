{"version":3,"file":"static/js/743.fbd1d016.chunk.js","mappings":"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","sources":["fragments/Navigation.jsx","pages/Reset.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { TfiArrowLeft } from \"react-icons/tfi\";\r\n\r\nconst Navigation = ({\r\n  header,\r\n  handleBackBtnCLick,\r\n  savebtn,\r\n  nextbtn,\r\n  savebtn2,\r\n  cancelbtn,\r\n  searchbar,\r\n}) => {\r\n  const styles =\r\n    \" flex flex-row top-0 z-10 absolute w-full lg:border-b-[3px] border-[#f5f5f5] dark:border-[#202020] h-[50px] lg:h-[60px]\";\r\n\r\n  return (\r\n    <>\r\n      <div className={styles}>\r\n        <div className=\"w-full h-full relative items-center justify-around flex flex-row \">\r\n          {handleBackBtnCLick || cancelbtn ? (\r\n            <button\r\n              className=\"flex flex-row cursor-pointer left-0 w-[42px] h-[42px] absolute ml-[4px] items-center hover:border-2 hover:text-[#00acee] border-[#00acee] justify-center hover:rounded-full\"\r\n              onClick={handleBackBtnCLick}>\r\n              {!cancelbtn ? <TfiArrowLeft fontSize={25} /> : cancelbtn}\r\n            </button>\r\n          ) : \"\"}\r\n\r\n          <h2 className=\"font-medium text-xl\">{header}</h2>\r\n          {savebtn}\r\n          {savebtn2}\r\n          {searchbar}\r\n          {nextbtn}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState } from 'react'\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router';\r\nimport Navigation from '../fragments/Navigation.jsx';\r\nimport { useLocation } from \"react-router-dom\";\r\n// import { RestartAnimation } from '../App.js';\r\n\r\nconst Reset = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confrimPassword, setConfirmPassword] = useState(\"\");\r\n  const path = useLocation().pathname\r\n  const navigate = useNavigate()\r\n\r\n  const cleanUp = () => {\r\n    setConfirmPassword(\"\")\r\n    setPassword(\"\")\r\n  }\r\n\r\n  const handleSigninClick = () => {\r\n    cleanUp()\r\n    document.querySelector(\"#password\").value = \"\"\r\n    document.querySelector(\"#confirm_password\").value = \"\"\r\n\r\n\r\n    if (!password && !confrimPassword) {\r\n    // RestartAnimation(\"Nothing was inserted\")\r\n    console.log(\"hello\")\r\n\r\n    } else if (password.toLocaleLowerCase() !== confrimPassword.toLocaleLowerCase()) {\r\n    // RestartAnimation(\"Nothing was inserted\")\r\n    console.log(\"hello\")\r\n\r\n\r\n    } else {\r\n      handleReset()\r\n    }\r\n  }\r\n\r\n  const handleReset = async () => {\r\n    try {\r\n      const res = await axios.post(path, { password, confrimPassword })\r\n      if (res.status === 200) {\r\n        // RestartAnimation(res.data)\r\n    console.log(\"hello\")\r\n\r\n        navigate(\"/signin\")\r\n      }\r\n\r\n    } catch (err) {\r\n      if (err.response.status === 403) {\r\n        // RestartAnimation(err.response.data)\r\n    console.log(\"hello\")\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleBackBtnCLick = (e) => {\r\n    e.preventDefault();\r\n    cleanUp()\r\n    navigate(\"/signin\")\r\n  }\r\n\r\n  const header = \"Sign Page\"\r\n  return (\r\n    <div className=\"flex flex-col top-0 overflow-scroll hide-scrollbar z-10 absolute h-screen w-full items-center justify-center\">\r\n\r\n      <Navigation header={header} handleBackBtnCLick={handleBackBtnCLick} />\r\n      <div className=\"flex flex-col items-center justify-center w-full lg:w-1/2 overflow-scroll h-full hide-scrollbar\">\r\n        <text className='font-base text-[20px]'>reset password</text>\r\n\r\n        <form id=\"signUp\">\r\n          <input\r\n            id=\"input\"\r\n            className=\"p-[10px] bg-none rounded-[6px] w-full my-[5px] border-2 border-[#999] outline-none\"\r\n            type=\"password\"\r\n            autoComplete='true'\r\n            placeholder='new password'\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n          <input\r\n            id=\"input\"\r\n            className=\"p-[10px] bg-none rounded-[6px] w-full my-[5px] border-2 border-[#999] outline-none\"\r\n            type=\"password\"\r\n            autoComplete='true'\r\n            placeholder='confirm password'\r\n            onChange={e => setConfirmPassword(e.target.value)}\r\n          />\r\n        </form>\r\n        {!password || !confrimPassword ? (\r\n          <button\r\n            className=\"flex flex-row items-center justify-center p-[8px] w-[60%] rounded-full mt-[20px] font-xl\"\r\n            style={{ backgroundColor: \"#999\", color: \"white\" }}\r\n            type=\"button\"\r\n            onClick={handleSigninClick}\r\n          >\r\n            incomplete details\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"flex flex-row items-center justify-center p-[8px] w-[60%] rounded-full mt-[20px] font-xl\"\r\n            style={{ backgroundColor: \"#00acee\", color: \"white\" }}\r\n            type=\"button\"\r\n            onClick={handleSigninClick}\r\n          >\r\n            Reset\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Reset;"],"names":["_ref","header","handleBackBtnCLick","savebtn","nextbtn","savebtn2","cancelbtn","searchbar","_jsx","_Fragment","children","className","_jsxs","onClick","TfiArrowLeft","fontSize","_useState","useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","confrimPassword","setConfirmPassword","path","useLocation","pathname","navigate","useNavigate","cleanUp","handleSigninClick","document","querySelector","value","toLocaleLowerCase","console","log","handleReset","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","post","sent","status","t0","response","stop","apply","arguments","Navigation","e","preventDefault","id","type","autoComplete","placeholder","onChange","target","style","backgroundColor","color"],"sourceRoot":""}